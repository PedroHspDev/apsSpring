{"ast":null,"code":"import axios from 'axios';\n\n// Detectar se estamos no Codespaces ou local\nconst isCodespaces = window.location.hostname.includes('github.dev') || window.location.hostname.includes('codespaces');\nconst API_BASE_URL = isCodespaces ? `https://${window.location.hostname.replace('3000', '8080')}/api/pessoas` : 'http://localhost:8080/api/pessoas';\n\n// Log para debug\nconsole.log('üîç Ambiente detectado:', isCodespaces ? 'Codespaces' : 'Local');\nconsole.log('üåê URL da API:', API_BASE_URL);\nclass PessoaService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // Listar todas as pessoas\n  async listarPessoas() {\n    try {\n      const response = await this.api.get('/');\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao listar pessoas:', error);\n      throw error;\n    }\n  }\n\n  // Buscar pessoa por ID\n  async buscarPessoaPorId(id) {\n    try {\n      const response = await this.api.get(`/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erro ao buscar pessoa com ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Criar nova pessoa\n  async criarPessoa(pessoa) {\n    try {\n      const response = await this.api.post('/', pessoa);\n      return response.data;\n    } catch (error) {\n      console.error('Erro ao criar pessoa:', error);\n      throw error;\n    }\n  }\n\n  // Deletar pessoa\n  async deletarPessoa(id) {\n    try {\n      await this.api.delete(`/${id}`);\n      return true;\n    } catch (error) {\n      console.error(`Erro ao deletar pessoa com ID ${id}:`, error);\n      throw error;\n    }\n  }\n}\nexport default new PessoaService();","map":{"version":3,"names":["axios","isCodespaces","window","location","hostname","includes","API_BASE_URL","replace","console","log","PessoaService","constructor","api","create","baseURL","headers","listarPessoas","response","get","data","error","buscarPessoaPorId","id","criarPessoa","pessoa","post","deletarPessoa","delete"],"sources":["/workspaces/apsSpring/aulaSpring/cliente-react/src/services/PessoaService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Detectar se estamos no Codespaces ou local\r\nconst isCodespaces = window.location.hostname.includes('github.dev') || window.location.hostname.includes('codespaces');\r\nconst API_BASE_URL = isCodespaces \r\n  ? `https://${window.location.hostname.replace('3000', '8080')}/api/pessoas`\r\n  : 'http://localhost:8080/api/pessoas';\r\n\r\n// Log para debug\r\nconsole.log('üîç Ambiente detectado:', isCodespaces ? 'Codespaces' : 'Local');\r\nconsole.log('üåê URL da API:', API_BASE_URL);\r\n\r\nclass PessoaService {\r\n  constructor() {\r\n    this.api = axios.create({\r\n      baseURL: API_BASE_URL,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  // Listar todas as pessoas\r\n  async listarPessoas() {\r\n    try {\r\n      const response = await this.api.get('/');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erro ao listar pessoas:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Buscar pessoa por ID\r\n  async buscarPessoaPorId(id) {\r\n    try {\r\n      const response = await this.api.get(`/${id}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Erro ao buscar pessoa com ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Criar nova pessoa\r\n  async criarPessoa(pessoa) {\r\n    try {\r\n      const response = await this.api.post('/', pessoa);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Erro ao criar pessoa:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Deletar pessoa\r\n  async deletarPessoa(id) {\r\n    try {\r\n      await this.api.delete(`/${id}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Erro ao deletar pessoa com ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new PessoaService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,YAAY,CAAC,IAAIH,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,YAAY,CAAC;AACvH,MAAMC,YAAY,GAAGL,YAAY,GAC7B,WAAWC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACG,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,cAAc,GACzE,mCAAmC;;AAEvC;AACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,YAAY,GAAG,YAAY,GAAG,OAAO,CAAC;AAC5EO,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,YAAY,CAAC;AAE3C,MAAMI,aAAa,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAAC;MACtBC,OAAO,EAAER,YAAY;MACrBS,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMC,aAAaA,CAAA,EAAG;IACpB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACL,GAAG,CAACM,GAAG,CAAC,GAAG,CAAC;MACxC,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMC,iBAAiBA,CAACC,EAAE,EAAE;IAC1B,IAAI;MACF,MAAML,QAAQ,GAAG,MAAM,IAAI,CAACL,GAAG,CAACM,GAAG,CAAC,IAAII,EAAE,EAAE,CAAC;MAC7C,OAAOL,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,gCAAgCE,EAAE,GAAG,EAAEF,KAAK,CAAC;MAC3D,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMG,WAAWA,CAACC,MAAM,EAAE;IACxB,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAM,IAAI,CAACL,GAAG,CAACa,IAAI,CAAC,GAAG,EAAED,MAAM,CAAC;MACjD,OAAOP,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMM,aAAaA,CAACJ,EAAE,EAAE;IACtB,IAAI;MACF,MAAM,IAAI,CAACV,GAAG,CAACe,MAAM,CAAC,IAAIL,EAAE,EAAE,CAAC;MAC/B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,iCAAiCE,EAAE,GAAG,EAAEF,KAAK,CAAC;MAC5D,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAIV,aAAa,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}