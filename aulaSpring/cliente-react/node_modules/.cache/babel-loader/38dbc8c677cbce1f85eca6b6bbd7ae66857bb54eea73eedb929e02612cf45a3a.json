{"ast":null,"code":"import axios from 'axios';\n\n// Detectar se estamos no Codespaces ou local\nconst isCodespaces = window.location.hostname.includes('github.dev') || window.location.hostname.includes('codespaces');\nconst API_BASE_URL = isCodespaces ? `https://expert-winner-97545wxw66jrc777j-8080.app.github.dev/api/pessoas` : 'http://localhost:8080/api/pessoas';\n\n// Log para debug\nconsole.log('🔍 Ambiente detectado:', isCodespaces ? 'Codespaces' : 'Local');\nconsole.log('🌐 URL da API:', API_BASE_URL);\nclass CarroService {\n  constructor() {\n    this.api = axios.create({\n      baseURL: API_BASE_URL,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  // Listar todos os carros\n  async listarCarros() {\n    try {\n      const response = await this.api.get('');\n      // Adaptar dados de pessoa para carro\n      const carros = response.data.map(pessoa => ({\n        id: pessoa.id,\n        modelo: pessoa.nome,\n        // Usando o campo nome como modelo\n        ano: pessoa.idade,\n        // Usando o campo idade como ano\n        marca: `Marca ${pessoa.id}` // Gerando marca baseada no ID\n      }));\n      return carros;\n    } catch (error) {\n      console.error('Erro ao listar carros:', error);\n      throw error;\n    }\n  }\n\n  // Buscar carro por ID\n  async buscarCarroPorId(id) {\n    try {\n      const response = await this.api.get(`/${id}`);\n      const pessoa = response.data;\n      // Adaptar dados de pessoa para carro\n      return {\n        id: pessoa.id,\n        modelo: pessoa.nome,\n        ano: pessoa.idade,\n        marca: `Marca ${pessoa.id}`\n      };\n    } catch (error) {\n      console.error(`Erro ao buscar carro com ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Criar novo carro\n  async criarCarro(carro) {\n    try {\n      // Adaptar dados de carro para pessoa\n      const pessoa = {\n        nome: carro.modelo,\n        idade: carro.ano\n      };\n      const response = await this.api.post('', pessoa);\n      // Adaptar resposta de pessoa para carro\n      return {\n        id: response.data.id,\n        modelo: response.data.nome,\n        ano: response.data.idade,\n        marca: `Marca ${response.data.id}`\n      };\n    } catch (error) {\n      console.error('Erro ao criar carro:', error);\n      throw error;\n    }\n  }\n\n  // Deletar carro\n  async deletarCarro(id) {\n    try {\n      await this.api.delete(`/${id}`);\n      return true;\n    } catch (error) {\n      console.error(`Erro ao deletar carro com ID ${id}:`, error);\n      throw error;\n    }\n  }\n}\nexport default new CarroService();","map":{"version":3,"names":["axios","isCodespaces","window","location","hostname","includes","API_BASE_URL","console","log","CarroService","constructor","api","create","baseURL","headers","listarCarros","response","get","carros","data","map","pessoa","id","modelo","nome","ano","idade","marca","error","buscarCarroPorId","criarCarro","carro","post","deletarCarro","delete"],"sources":["/workspaces/apsSpring/aulaSpring/cliente-react/src/services/CarroService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Detectar se estamos no Codespaces ou local\r\nconst isCodespaces = window.location.hostname.includes('github.dev') || window.location.hostname.includes('codespaces');\r\nconst API_BASE_URL = isCodespaces \r\n  ? `https://expert-winner-97545wxw66jrc777j-8080.app.github.dev/api/pessoas`\r\n  : 'http://localhost:8080/api/pessoas';\r\n\r\n// Log para debug\r\nconsole.log('🔍 Ambiente detectado:', isCodespaces ? 'Codespaces' : 'Local');\r\nconsole.log('🌐 URL da API:', API_BASE_URL);\r\n\r\nclass CarroService {\r\n  constructor() {\r\n    this.api = axios.create({\r\n      baseURL: API_BASE_URL,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  // Listar todos os carros\r\n  async listarCarros() {\r\n    try {\r\n      const response = await this.api.get('');\r\n      // Adaptar dados de pessoa para carro\r\n      const carros = response.data.map(pessoa => ({\r\n        id: pessoa.id,\r\n        modelo: pessoa.nome, // Usando o campo nome como modelo\r\n        ano: pessoa.idade,   // Usando o campo idade como ano\r\n        marca: `Marca ${pessoa.id}` // Gerando marca baseada no ID\r\n      }));\r\n      return carros;\r\n    } catch (error) {\r\n      console.error('Erro ao listar carros:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Buscar carro por ID\r\n  async buscarCarroPorId(id) {\r\n    try {\r\n      const response = await this.api.get(`/${id}`);\r\n      const pessoa = response.data;\r\n      // Adaptar dados de pessoa para carro\r\n      return {\r\n        id: pessoa.id,\r\n        modelo: pessoa.nome,\r\n        ano: pessoa.idade,\r\n        marca: `Marca ${pessoa.id}`\r\n      };\r\n    } catch (error) {\r\n      console.error(`Erro ao buscar carro com ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Criar novo carro\r\n  async criarCarro(carro) {\r\n    try {\r\n      // Adaptar dados de carro para pessoa\r\n      const pessoa = {\r\n        nome: carro.modelo,\r\n        idade: carro.ano\r\n      };\r\n      const response = await this.api.post('', pessoa);\r\n      // Adaptar resposta de pessoa para carro\r\n      return {\r\n        id: response.data.id,\r\n        modelo: response.data.nome,\r\n        ano: response.data.idade,\r\n        marca: `Marca ${response.data.id}`\r\n      };\r\n    } catch (error) {\r\n      console.error('Erro ao criar carro:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Deletar carro\r\n  async deletarCarro(id) {\r\n    try {\r\n      await this.api.delete(`/${id}`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error(`Erro ao deletar carro com ID ${id}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new CarroService();\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,YAAY,CAAC,IAAIH,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,YAAY,CAAC;AACvH,MAAMC,YAAY,GAAGL,YAAY,GAC7B,yEAAyE,GACzE,mCAAmC;;AAEvC;AACAM,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEP,YAAY,GAAG,YAAY,GAAG,OAAO,CAAC;AAC5EM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,YAAY,CAAC;AAE3C,MAAMG,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,GAAG,GAAGX,KAAK,CAACY,MAAM,CAAC;MACtBC,OAAO,EAAEP,YAAY;MACrBQ,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,MAAMC,YAAYA,CAAA,EAAG;IACnB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACL,GAAG,CAACM,GAAG,CAAC,EAAE,CAAC;MACvC;MACA,MAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,MAAM,KAAK;QAC1CC,EAAE,EAAED,MAAM,CAACC,EAAE;QACbC,MAAM,EAAEF,MAAM,CAACG,IAAI;QAAE;QACrBC,GAAG,EAAEJ,MAAM,CAACK,KAAK;QAAI;QACrBC,KAAK,EAAE,SAASN,MAAM,CAACC,EAAE,EAAE,CAAC;MAC9B,CAAC,CAAC,CAAC;MACH,OAAOJ,MAAM;IACf,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMC,gBAAgBA,CAACP,EAAE,EAAE;IACzB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAM,IAAI,CAACL,GAAG,CAACM,GAAG,CAAC,IAAIK,EAAE,EAAE,CAAC;MAC7C,MAAMD,MAAM,GAAGL,QAAQ,CAACG,IAAI;MAC5B;MACA,OAAO;QACLG,EAAE,EAAED,MAAM,CAACC,EAAE;QACbC,MAAM,EAAEF,MAAM,CAACG,IAAI;QACnBC,GAAG,EAAEJ,MAAM,CAACK,KAAK;QACjBC,KAAK,EAAE,SAASN,MAAM,CAACC,EAAE;MAC3B,CAAC;IACH,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,+BAA+BN,EAAE,GAAG,EAAEM,KAAK,CAAC;MAC1D,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAME,UAAUA,CAACC,KAAK,EAAE;IACtB,IAAI;MACF;MACA,MAAMV,MAAM,GAAG;QACbG,IAAI,EAAEO,KAAK,CAACR,MAAM;QAClBG,KAAK,EAAEK,KAAK,CAACN;MACf,CAAC;MACD,MAAMT,QAAQ,GAAG,MAAM,IAAI,CAACL,GAAG,CAACqB,IAAI,CAAC,EAAE,EAAEX,MAAM,CAAC;MAChD;MACA,OAAO;QACLC,EAAE,EAAEN,QAAQ,CAACG,IAAI,CAACG,EAAE;QACpBC,MAAM,EAAEP,QAAQ,CAACG,IAAI,CAACK,IAAI;QAC1BC,GAAG,EAAET,QAAQ,CAACG,IAAI,CAACO,KAAK;QACxBC,KAAK,EAAE,SAASX,QAAQ,CAACG,IAAI,CAACG,EAAE;MAClC,CAAC;IACH,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;;EAEA;EACA,MAAMK,YAAYA,CAACX,EAAE,EAAE;IACrB,IAAI;MACF,MAAM,IAAI,CAACX,GAAG,CAACuB,MAAM,CAAC,IAAIZ,EAAE,EAAE,CAAC;MAC/B,OAAO,IAAI;IACb,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,gCAAgCN,EAAE,GAAG,EAAEM,KAAK,CAAC;MAC3D,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAInB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}